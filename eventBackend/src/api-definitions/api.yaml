openapi: 3.0.1
info:
  version: '1.0.0'
  title: 'Supply Chain Threat Analysis Dashboard API'
  description: 'API providing basic functionalities of the Threddi (preliminary name) BMW Supply Chain Threat Analysis Dashboard'
  termsOfService: https://foo.com/terms-of-use
  contact:
    name: Bernhard
    url: foo.com
    email: bernhard@foo.com
  license:
    name: BMW License
    url: http://foo.com/dashboard
tags:
- name: event
  description: Access to event objects
  externalDocs:
    description: Find out more
    url: https://www.gdeltproject.org/data.html#documentation
- name: location
  description: Access to location objects
- name: configuration
  description: Access to configuration objects


paths:
  /events:
    summary: Event object type
    description: This resource represents an individual event in the system. Each event is identified by an unique event_id.
    get:
      tags:
      - event
      summary: Return array with event information.
      description: Obtain information about ongoing events.
      operationId: getEvent
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/events'
        400:
          description: Invalid request
          content: {}
        500:
          description: internal error happened by elasticsearch database

  /events/{eventId}:
    summary: Tbd
    description: Tbd
    get:
      tags:
      - event
      summary: Return event by event_id.
      description: Obtain information about a specific event by stating the event_id.
      operationId: getEventById
      parameters:
      - name: eventId
        in: path
        description: ID of event that needs to be fetched
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/events'
        400:
          description: Invalid request
          content: {}
        404:
          description: ID not found
          content: {}
        500:
          description: internal error happened by elasticsearch database
    delete:
      tags:
      - event
      summary: Delete event by ID
      operationId: deleteEventByID
      parameters:
      - name: eventId
        in: path
        description: Event_id of the location that need to be updated
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
        400:
          description: Invalid request
          content: {}
        404:
          description: ID not found
          content: {}
        500:
          description: internal error happened by elasticsearch database

components:
  schemas:
    events:
      type: object
      $ref: '#/components/schemas/events'
      properties:
        event_id:
          type: string
        sentiment_group: # 2 highly positive and -2 highly negative
          type: integer
          minimum: -2
          maximum: 2
        lat:
          type: string
        long:
          type: string
        url: #Source of the Incident
          type: string
        description: #Short description of the event
          type: string
        importance: # Importance of the Event 0 -> not -> 1 yes
          type: number
          format: float
        timestamp:
          type: integer
        Actor:
          type: object
          properties:
              actor_id:
                type: string
              actor_name:
                type: string
              actor_origin:
                type: string
              actor_group:
                type: string
              actor_type: #//[police, military, rebels, etc]
                type: array
                items:
                  type: string
        source_dependent_information:
          type: array
          items:
            type: object
            properties:
              displayname:
                type: string
              id:
                type: string
              description:
                type: string
  securitySchemes:
    authenticationHeader:
      type: apiKey
      $ref: '#/components/securitySchemes/authenticationHeader'
      in: header
      name: Authentication
      description: Enter your token in the format **Bearer clientCredential &lt;clientId:clientSecret and encoded in Base64>**