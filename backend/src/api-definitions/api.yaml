openapi: 3.0.1
info:
  version: '1.0.0'
  title: 'Supply Chain Threat Analysis Dashboard API'
  description: 'API providing basic functionalities of the Threddi (preliminary name) BMW Supply Chain Threat Analysis Dashboard'
  termsOfService: https://foo.com/terms-of-use
  contact:
    name: Bernhard
    url: foo.com
    email: bernhard@foo.com
  license:
    name: BMW License
    url: http://foo.com/dashboard
tags:
- name: event
  description: Access to event objects
  externalDocs:
    description: Find out more
    url: https://www.gdeltproject.org/data.html#documentation
- name: location
  description: Access to object locations


paths:
  /events:
    summary: Event object type
    description: This resource represents an individual event in the system. Each event is identified by an unique event_id.
    get:
      tags:
      - event
      summary: Return array with event information.
      description: Obtain information about ongoing events.
      operationId: getEvent
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/events'
        400:
          description: Invalid request
          content: {}
        500:
          description: internal error happened by elasticsearch database

  /events/{eventId}:
    summary: Tbd
    description: Tbd
    get:
      tags:
      - event
      summary: Return event by event_id.
      description: Obtain information about a specific event by stating the event_id.
      operationId: getEventById
      parameters:
      - name: eventId
        in: path
        description: ID of event that needs to be fetched
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/events'
        400:
          description: Invalid request
          content: {}
        404:
          description: ID not found
          content: {}
        500:
          description: internal error happened by elasticsearch database
    delete:
      tags:
      - event
      summary: Delete event by ID
      operationId: deleteEventByID
      parameters:
      - name: eventId
        in: path
        description: Event_id of the location that need to be updated
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
        400:
          description: Invalid request
          content: {}
        404:
          description: ID not found
          content: {}
        500:
          description: internal error happened by elasticsearch database

  /mainlocations:
    summary: Main location object type
    description: This resource represents an individual location object in the system. Each location is identified by an unique location_id.
    get:
      tags:
      - location
      summary: Return array with all location information.
      description: Obtain information about all location objects stored in the database.
      operationId: getLocations
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/mainlocations'
        400:
          description: Invalid request
          content: {}
        500:
          description: internal error happened by elasticsearch database
    post:
      tags:
      - location
      summary: Add a new location to the database
      operationId: postLocations
      requestBody:
        description: Location object that needs to be added to the database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mainlocations'
        required: true
      responses:
        201:
          description: New resource created
        405:
          description: Invalid input
          content: {}
        500:
          description: internal error happened by elasticsearch database

  /mainlocations/{location_id}:
    put:
      tags:
      - location
      summary: Update a existing location by ID
      description: This can only be done by the logged in user.
      operationId: updateLocationByID
      parameters:
      - name: location_id
        in: path
        description: Location_id that need to be updated
        required: true
        schema:
          type: string
      requestBody:
        description: Location_id of the location that need to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/mainlocations'
        required: true
      responses:
        200:
          description: Successful operation
        201:
          description: New resource created
        400:
          description: Invalid request
          content: {}
        404:
          description: ID not found
          content: {}
        405:
          description: Validation exception
          content: {}
        500:
          description: internal error happened by elasticsearch database
    delete:
      tags:
      - location
      summary: Delete location by ID
      operationId: deleteLocationByID
      parameters:
      - name: location_id
        in: path
        description: Location_id of the location that need to be updated
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful operation
        400:
          description: Invalid request
          content: {}
        404:
          description: ID not found
          content: {}
        500:
          description: internal error happened by elasticsearch database

# Added by API Auto Mocking Plugin
servers:
# Added by API Auto Mocking Plugin
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/ElHong/Supply_Chain_Threat_Analysis_Dashboard_API/1.0.0
  - description: Dev Server
    url: https://de.foo.com/v1
  - description: Prod Server
    url: https://de.foo.com/v2

components:
  schemas:
    events:
      type: object
      $ref: '#/components/schemas/events'
      properties:
        event_id:
          type: string
        sentiment_group: # 2 highly positive and -2 highly negative
          type: integer
          minimum: -2
          maximum: 2
        lat:
          type: string
        long:
          type: string
        url: #Source of the Incident
          type: string
        description: #Short description of the event
          type: string
        importance: # Importance of the Event 0 -> not -> 1 yes
          type: number
          format: float
        timestamp:
          type: integer
        Actor:
          type: object
          properties:
              actor_id:
                type: string
              actor_name:
                type: string
              actor_origin:
                type: string
              actor_group:
                type: string
              actor_type: #//[police, military, rebels, etc]
                type: array
                items:
                    type: string
        source_dependent_information:
          type: array
          items:
            type: object
    mainlocations:
      type: object
      $ref: '#/components/schemas/mainlocations'
      properties:
        location_id:
          type: string
        lat:
          type: string
        long:
          type: string
        description:
          type: string
        location_type: #plant, storage, person
          type: string
        image_url:
          type: string
        priority:
          type: integer
          format: int32
          maximum: 10
          minimum: 0
        additional_information:
          type: array
          items:
            type: string
    historical_events:
      type: object
      properties:
        location_id: # id of location
          type: string
        day:
          type: string
          format: datetime
        event_count: # Amount of events at a particular day
          type: integer
          format: int64
