{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/sasank/Desktop/Programming/ReactWebApp/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/sasank/Desktop/Programming/ReactWebApp/frontend/src/components/SideBar.jsx\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\nheight: 70px;\\nwidth: 75px; /* width must be same size as NavBar to center */\\ntext-align: center; /* Aligns <a> inside of NavIcon div */\\nmargin-bottom: 0;   /* Puts space between NavItems */\\na {\\n    font-size: 2.7em;\\n    color: \", \";\\n    :hover {\\n        opacity: 0.7;\\n        text-decoration: none; /* Gets rid of underlining of icons */\\n    }  \\n}\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"   \\nposition: fixed;     /* Fixed Sidebar (stay in place on scroll and position relative to viewport) */\\nheight: 100%;\\nwidth: 75px;     /* Set the width of the sidebar */\\nz-index: 1;      /* Stay on top of everything */\\ntop: 3.4em;      /* Stay at the top */\\nbackground-color: #222; /* Black */\\noverflow-x: hidden;     /* Disable horizontal scroll */\\npadding-top: 10px;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from 'styled-components';\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nconst StyledSideNav = styled.div(_templateObject());\n\nclass SideNav extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onItemClick = path => {\n      this.setState({\n        activePath: path\n      });\n    };\n\n    this.state = {\n      activePath: props.location.pathname,\n      items: [{\n        path: '/',\n\n        /* path is used as id to check which NavItem is active basically */\n        name: 'Home',\n        css: 'fas fa-globe-americas',\n        key: 1\n        /* Key is required, else console throws error. Does this please you Mr. Browser?! */\n\n      }, {\n        path: '/incidents',\n        name: 'Incident',\n        css: 'fas fa-bars',\n        key: 2\n      }, {\n        path: '/locations',\n        name: 'Location',\n        css: 'fas fa-map-marker-alt',\n        key: 3\n      }]\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          items = _this$state.items,\n          activePath = _this$state.activePath;\n    return React.createElement(StyledSideNav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, items.map(item => {\n      return React.createElement(NavItem, {\n        path: item.path,\n        name: item.name,\n        css: item.css,\n        onItemClick: this.onItemClick,\n        active: item.path === activePath,\n        key: item.key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      });\n    }));\n  }\n\n}\n\nconst RouterSideNav = withRouter(SideNav);\nconst StyledNavItem = styled.div(_templateObject2(), props => props.active ? \"white\" : \"#9FFFCB\");\n\nclass NavItem extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {\n      const _this$props = this.props,\n            path = _this$props.path,\n            onItemClick = _this$props.onItemClick;\n      onItemClick(path);\n    };\n  }\n\n  render() {\n    const active = this.props.active;\n    return React.createElement(StyledNavItem, {\n      active: active,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: this.props.path,\n      className: this.props.css,\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(NavIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst NavIcon = styled.div(_templateObject3());\nexport default class Sidebar extends React.Component {\n  render() {\n    return React.createElement(RouterSideNav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/sasank/Desktop/Programming/ReactWebApp/frontend/src/components/SideBar.jsx"],"names":["styled","React","Component","Link","withRouter","StyledSideNav","div","SideNav","constructor","props","onItemClick","path","setState","activePath","state","location","pathname","items","name","css","key","render","map","item","RouterSideNav","StyledNavItem","active","NavItem","handleClick","NavIcon","Sidebar"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\nimport React, {Component} from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nconst StyledSideNav = styled.div`   \nposition: fixed;     /* Fixed Sidebar (stay in place on scroll and position relative to viewport) */\nheight: 100%;\nwidth: 75px;     /* Set the width of the sidebar */\nz-index: 1;      /* Stay on top of everything */\ntop: 3.4em;      /* Stay at the top */\nbackground-color: #222; /* Black */\noverflow-x: hidden;     /* Disable horizontal scroll */\npadding-top: 10px;\n`;\n\nclass SideNav extends React.Component {\nconstructor(props) {\n    super(props);\n    this.state = {\n        activePath: props.location.pathname,\n        items: [\n            {\n              path: '/', /* path is used as id to check which NavItem is active basically */\n              name: 'Home',\n              css: 'fas fa-globe-americas',\n              key: 1 /* Key is required, else console throws error. Does this please you Mr. Browser?! */\n            },\n            {\n              path: '/incidents',\n              name: 'Incident',\n              css: 'fas fa-bars',\n              key: 2\n            },\n            {\n              path: '/locations',\n              name: 'Location',\n              css: 'fas fa-map-marker-alt',\n              key: 3\n            },\n          ]\n    }\n}\n\nonItemClick = (path) => {\n    this.setState({ activePath: path });\n}\n\nrender() {\n    const { items, activePath } = this.state;\n    return(\n        <StyledSideNav>\n            {\n                items.map((item) => {\n                    return (\n                        <NavItem \n                            path={item.path}\n                            name={item.name}\n                            css={item.css}\n                            onItemClick={this.onItemClick}\n                            active={item.path === activePath}\n                            key={item.key}\n                        >    \n                        </NavItem>\n                    );\n                })\n            }\n        </StyledSideNav>\n    );\n}\n}\n\nconst RouterSideNav = withRouter(SideNav);\n\nconst StyledNavItem = styled.div`\nheight: 70px;\nwidth: 75px; /* width must be same size as NavBar to center */\ntext-align: center; /* Aligns <a> inside of NavIcon div */\nmargin-bottom: 0;   /* Puts space between NavItems */\na {\n    font-size: 2.7em;\n    color: ${(props) => props.active ? \"white\" : \"#9FFFCB\"};\n    :hover {\n        opacity: 0.7;\n        text-decoration: none; /* Gets rid of underlining of icons */\n    }  \n}\n`;\n\nclass NavItem extends React.Component {\nhandleClick = () => {\n    const { path, onItemClick } = this.props;\n    onItemClick(path);\n}\n\nrender() {\n    const { active } = this.props;\n    return(\n        <StyledNavItem active={active}>\n            <Link to={this.props.path} className={this.props.css} onClick={this.handleClick}>\n                <NavIcon></NavIcon>\n            </Link>\n        </StyledNavItem>\n    );\n}\n}\n\nconst NavIcon = styled.div`\n`;\n\nexport default class Sidebar extends React.Component {\nrender() {\n    return (\n        <RouterSideNav></RouterSideNav>\n    );\n}\n}"]},"metadata":{},"sourceType":"module"}